{"version":3,"sources":["../node_modules/ethjs-util/lib/index.js","../../src/bytes.ts","../node_modules/ethereumjs-abi/index.js","../../src/secp256k1v3-adapter.ts","../../src/hash.ts","../node_modules/ethereumjs-abi/lib/index.js","../../src/index.ts","../../../src/secp256k1v3-lib/index.ts","../../../src/secp256k1v3-lib/der.ts","../../src/constants.ts","../../src/account.ts","../../src/signature.ts","../../src/object.ts"],"names":["isHexPrefixed","require","stripHexPrefix","padToEven","value","a","Error","length","intToHex","i","toString","module","exports","arrayContainsArray","superset","subset","some","Array","isArray","Boolean","indexOf","intToBuffer","hex","Buffer","slice","getBinarySize","str","byteLength","fromAscii","stringValue","n","charCodeAt","fromUtf8","replace","toAscii","l","substring","code","parseInt","substr","String","fromCharCode","toUtf8","getKeys","params","key","allowEmpty","result","push","isHexString","match","ethjsUtil","bytes","allocUnsafe","fill","msg","right","buf","copy","first","v","isBuffer","from","undefined","BN","isBN","toArrayLike","toArray","toNumber","num","fromTwos","toTwos","ba","array","secp256k1","secp256k1v3","der","privateKey","privateKeyVerify","Uint8Array","compressed","RangeError","publicKey","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","keys","forEach","publicKeyCombine","signature","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","message","options","TypeError","signOptions","data","noncefn","algo","attempt","bufferAlgo","bufferData","buffer","sig","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","keccak224","keccak384","k256","keccak512","createHash","bits","bytes_1","update","digest","padded","hash","rlp","encode","utils","ABI","elementaryName","name","startsWith","parseTypeN","type","exec","parseTypeNxM","tmp","parseTypeArray","parseNumber","arg","parseSignature","args","method","split","retargs","encodeSingle","size","ret","lastIndexOf","JSON","parse","unshift","concat","zeros","setLengthRight","bitLength","mul","pow","decodeSingle","parsedType","offset","parseType","rawType","decoded","subArray","memoryUsage","mod","isZero","div","isDynamic","stringify","eventID","types","map","join","keccak256","methodID","rawEncode","values","output","headLength","cur","rawDecode","parsed","simpleEncode","prototype","call","arguments","simpleDecode","test","item","solidityHexValue","bitsize","subType","arraySize","arrayValues","padding","bytesize","setLengthLeft","solidityPack","soliditySHA3","soliditySHA256","sha256","solidityRIPEMD160","ripemd160","fromSerpent","c","j","toSerpent","Object","assign","__exportStar","ec","EC","ecparams","curve","d","ucmp","point","g","toPublicKey","getX","getY","bn","invm","r","s","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","index","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","assert","addr","address","eip1191ChainId","toLowerCase","prefix","hash_1","toUpperCase","nonce","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","sanitize","pubKey","calculateSigRecovery","chainId","isValidSigRecovery","msgHash","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","self","fields","raw","_fields","toJSON","label","obj_1","field","serialize","getter","setter","allowZero","allowLess","defineProperty","enumerable","configurable","get","set","default","alias","decode","keys_1"],"mappings":"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ET,IAAMmK,EAAmC9N,EAAOuC,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIwL,EAAqC/N,EAAOuC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,E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","file":"static/js/1.1b3d49fb.chunk.js","sourcesContent":["'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};",null,"module.exports = require('./lib/index.js')\n",null,null,"/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n",null,null,null,null,null,null,null],"sourceRoot":""}