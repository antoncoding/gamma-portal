{"version":3,"file":"IdentityBadgePopover.js","sources":["../src/components/IdentityBadge/IdentityBadgePopover.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { GU } from '../../style'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\nimport Tag from '../Tag/Tag'\n\nconst IdentityBadgePopover = React.memo(function IdentityBadgePopover({\n  address,\n  connectedAccount,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', address, { networkType })\n\n  return (\n    <BadgePopoverBase\n      addressField={<AddressField address={address} />}\n      link={etherscanUrl && <Link href={etherscanUrl}>See on Explorer</Link>}\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      titleTag={\n        connectedAccount && (\n          <Tag\n            css={`\n              margin-left: ${1 * GU}px;\n            `}\n            title=\"This is your Ethereum address\"\n          >\n            you\n          </Tag>\n        )\n      }\n      visible={visible}\n    />\n  )\n})\nIdentityBadgePopover.propTypes = {\n  address: PropTypes.string,\n  connectedAccount: PropTypes.bool,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node,\n  visible: PropTypes.bool,\n}\nIdentityBadgePopover.defaultProps = {\n  title: 'Address',\n}\n\nexport default IdentityBadgePopover\n"],"names":["IdentityBadgePopover","React","memo","address","connectedAccount","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","BadgePopoverBase","AddressField","Link","GU","propTypes","PropTypes","string","bool","func","_element","BadgePopoverActionType","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUMA,oBAAoB,gBAAGC,yBAAK,CAACC,IAAN,CAAW,SAASF,oBAAT,OASrC;AAAA,MARDG,OAQC,QARDA,OAQC;AAAA,MAPDC,gBAOC,QAPDA,gBAOC;AAAA,MANDC,WAMC,QANDA,WAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,MAAMC,YAAY,GAAGC,qBAAgB,CAAC,SAAD,EAAYT,OAAZ,EAAqB;AAAEE,IAAAA,WAAW,EAAXA;AAAF,GAArB,CAArC;AAEA,sBACEJ,wCAACY,2BAAD;AACE,IAAA,YAAY,eAAEZ,wCAACa,uBAAD;AAAc,MAAA,OAAO,EAAEX;AAAvB,MADhB;AAEE,IAAA,IAAI,EAAEQ,YAAY,iBAAIV,wCAACc,eAAD;AAAM,MAAA,IAAI,EAAEJ;AAAZ,yBAFxB;AAGE,IAAA,OAAO,EAAEL,OAHX;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,aAAa,EAAEC,aALjB;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,QAAQ,EACNL,gBAAgB,iBACdH;AAIE,MAAA,KAAK,EAAC,+BAJR;AAAA,YAEmB,IAAIe;AAFvB,aATN;AAmBE,IAAA,OAAO,EAAEN;AAnBX,IADF;AAuBD,CAnC4B;AAoC7BV,oBAAoB,CAACiB,SAArB,GAAiC;AAC/Bd,EAAAA,OAAO,EAAEe,2BAAS,CAACC,MADY;AAE/Bf,EAAAA,gBAAgB,EAAEc,2BAAS,CAACE,IAFG;AAG/Bf,EAAAA,WAAW,EAAEa,2BAAS,CAACC,MAHQ;AAI/Bb,EAAAA,OAAO,EAAEY,2BAAS,CAACG,IAJY;AAK/Bd,EAAAA,MAAM,EAAEW,2BAAS,CAACI,QALa;AAM/Bd,EAAAA,aAAa,EAAEe,iCANgB;AAO/Bd,EAAAA,KAAK,EAAES,2BAAS,CAACM,IAPc;AAQ/Bd,EAAAA,OAAO,EAAEQ,2BAAS,CAACE;AARY,CAAjC;AAUApB,oBAAoB,CAACyB,YAArB,GAAoC;AAClChB,EAAAA,KAAK,EAAE;AAD2B,CAApC;;;;"}