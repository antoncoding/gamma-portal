{"version":3,"file":"AutoCompleteSelected.js","sources":["../../../../../src/components/AutoComplete/AutoCompleteSelected.js"],"sourcesContent":["import React, { useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { RADIUS } from '../../style'\nimport { useTheme } from '../../theme'\nimport { identity, noop } from '../../utils'\nimport ButtonBase from '../ButtonBase/ButtonBase'\nimport AutoComplete from './AutoComplete'\n\nfunction AutoCompleteSelected({\n  forwardedRef,\n  itemButtonStyles,\n  items,\n  onChange,\n  onSelect,\n  onSelectedClick = noop,\n  placeholder,\n  renderItem,\n  required,\n  renderSelected = identity,\n  selected,\n  selectedButtonStyles = '',\n  value,\n  wide,\n}) {\n  const theme = useTheme()\n\n  const ref = forwardedRef\n  const selectedRef = useRef()\n\n  const handleSelect = useCallback(\n    selected => {\n      onSelect(selected)\n      setTimeout(() => {\n        selectedRef.current.focus()\n      }, 0)\n    },\n    [onSelect]\n  )\n  const handleSelectedClick = useCallback(() => {\n    onSelectedClick()\n    setTimeout(() => {\n      if (ref && ref.current) {\n        ref.current.select()\n        ref.current.focus()\n      }\n    }, 0)\n  }, [ref, onSelectedClick])\n\n  if (selected) {\n    return (\n      <ButtonBase\n        onClick={handleSelectedClick}\n        ref={selectedRef}\n        focusRingRadius={RADIUS}\n        focusRingSpacing={1}\n        css={`\n          height: 40px;\n          width: 100%;\n          text-align: left;\n          background: ${theme.surface};\n          cursor: pointer;\n          border: 1px solid ${theme.border};\n          padding: 4px 8px;\n          ${selectedButtonStyles};\n        `}\n      >\n        {renderSelected(selected)}\n      </ButtonBase>\n    )\n  }\n\n  return (\n    <AutoComplete\n      itemButtonStyles={itemButtonStyles}\n      items={items}\n      onChange={onChange}\n      onSelect={handleSelect}\n      placeholder={placeholder}\n      ref={ref}\n      renderItem={renderItem}\n      required={required}\n      value={value}\n      wide={wide}\n    />\n  )\n}\n\nAutoCompleteSelected.propTypes = {\n  forwardedRef: PropTypes.object,\n  itemButtonStyles: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectedClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelected: PropTypes.func,\n  required: PropTypes.bool,\n  selected: PropTypes.object,\n  selectedButtonStyles: PropTypes.string,\n  value: PropTypes.string,\n  wide: PropTypes.bool,\n}\n\nconst AutoCompleteSelectedMemo = React.memo(AutoCompleteSelected)\n\nexport default React.forwardRef((props, ref) => (\n  <AutoCompleteSelectedMemo {...props} forwardedRef={ref} />\n))\n"],"names":["AutoCompleteSelected","forwardedRef","itemButtonStyles","items","onChange","onSelect","onSelectedClick","noop","placeholder","renderItem","required","renderSelected","identity","selected","selectedButtonStyles","value","wide","theme","useTheme","ref","selectedRef","useRef","handleSelect","useCallback","setTimeout","current","focus","handleSelectedClick","select","RADIUS","surface","border","propTypes","PropTypes","object","string","array","isRequired","func","bool","AutoCompleteSelectedMemo","React","memo","forwardRef","props"],"mappings":"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"}