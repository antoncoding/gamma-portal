{"version":3,"file":"Layout.js","sources":["../../../../../src/components/Layout/Layout.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useViewport } from '../../providers/Viewport/Viewport'\nimport { BREAKPOINTS, GU } from '../../style'\nimport { cssPx } from '../../utils'\n\nfunction getSizes(breakpoints) {\n  return Object.entries(breakpoints)\n    .filter(([name]) => name !== 'min')\n    .sort((a, b) => a[1] - b[1])\n}\n\nconst breakpointsType = PropTypes.shape({\n  min: PropTypes.number,\n  small: PropTypes.number,\n  medium: PropTypes.number,\n  large: PropTypes.number,\n})\n\n// Minimum margin around a layout\nconst MIN_MARGIN = 3 * GU\n\nfunction getLayoutSize(parentWidth, breakpoints) {\n  const sizes = getSizes(breakpoints)\n\n  let index = sizes.length\n  while (index--) {\n    if (parentWidth >= sizes[index][1]) {\n      return [\n        sizes[index][0],\n        sizes[index][1] - (index === 0 ? 0 : MIN_MARGIN * 2),\n      ]\n    }\n  }\n\n  return sizes[0]\n}\n\nfunction useMergeBreakpoints(breakpoints) {\n  const breakpointsAsString = JSON.stringify(breakpoints)\n\n  // Only compute once by comparing values rather than object references in dependency array\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => ({ ...BREAKPOINTS, ...breakpoints }), [\n    breakpointsAsString,\n  ])\n}\n\nconst LayoutContext = React.createContext({})\n\nfunction useLayout() {\n  const { layoutWidth, layoutName } = useContext(LayoutContext)\n  return {\n    layoutName,\n    layoutWidth,\n\n    // deprecated\n    name: layoutName,\n    width: layoutWidth,\n  }\n}\n\nfunction Layout({\n  breakpoints,\n  children,\n  paddingBottom,\n  parentWidth,\n  ...props\n}) {\n  const mergedBreakpoints = useMergeBreakpoints(breakpoints)\n\n  return (\n    <LayoutProvider parentWidth={parentWidth} breakpoints={breakpoints}>\n      <LayoutWidthLimiter\n        minWidth={mergedBreakpoints.min}\n        paddingBottom={paddingBottom}\n        {...props}\n      >\n        {children}\n      </LayoutWidthLimiter>\n    </LayoutProvider>\n  )\n}\n\nLayout.propTypes = {\n  breakpoints: breakpointsType,\n  children: PropTypes.node,\n  paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentWidth: PropTypes.number,\n}\n\nLayout.defaultProps = {\n  breakpoints: {},\n  paddingBottom: 3 * GU,\n}\n\nfunction LayoutProvider({ breakpoints, children, parentWidth }) {\n  const { width: viewportWidth } = useViewport()\n  const mergedBreakpoints = useMergeBreakpoints(breakpoints)\n\n  // If the parent width is not passed, use the viewport width.\n  const [layoutName, layoutWidth] = useMemo(\n    () =>\n      getLayoutSize(\n        parentWidth === undefined ? viewportWidth : parentWidth,\n        mergedBreakpoints\n      ),\n    [viewportWidth, parentWidth, mergedBreakpoints]\n  )\n\n  return (\n    <LayoutContext.Provider value={{ layoutWidth, layoutName }}>\n      {children}\n    </LayoutContext.Provider>\n  )\n}\n\nLayoutProvider.propTypes = {\n  breakpoints: breakpointsType,\n  children: PropTypes.node,\n  parentWidth: PropTypes.number,\n}\n\nLayoutProvider.defaultProps = {\n  breakpoints: {},\n}\n\n/* eslint-disable react/prop-types */\nfunction LayoutWidthLimiter({ children, minWidth, paddingBottom, ...props }) {\n  const { layoutName, layoutWidth } = useLayout()\n\n  return (\n    <div\n      {...props}\n      css={`\n        width: ${layoutName === 'small' ? 'auto' : `${layoutWidth}px`};\n        min-width: ${minWidth}px;\n        margin: 0 auto;\n        padding-bottom: ${cssPx(paddingBottom)};\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n/* eslint-enable react/prop-types */\n\nexport default Layout\nexport { useLayout, LayoutProvider }\n"],"names":["getSizes","breakpoints","Object","entries","filter","name","sort","a","b","breakpointsType","PropTypes","shape","min","number","small","medium","large","MIN_MARGIN","GU","getLayoutSize","parentWidth","sizes","index","length","useMergeBreakpoints","breakpointsAsString","JSON","stringify","useMemo","BREAKPOINTS","LayoutContext","React","createContext","useLayout","useContext","layoutWidth","layoutName","width","Layout","children","paddingBottom","props","mergedBreakpoints","propTypes","node","oneOfType","string","defaultProps","LayoutProvider","useViewport","viewportWidth","undefined","LayoutWidthLimiter","minWidth","cssPx"],"mappings":"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"}