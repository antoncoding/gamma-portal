{"version":3,"file":"AppBadgePopover.js","sources":["../../../../../src/components/AppBadge/AppBadgePopover.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { ImageExists } from '../../hooks'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\n\nconst AppBadgePopover = React.memo(function AppBadgePopover({\n  appAddress,\n  iconFallbackSrc,\n  iconSrc,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', appAddress, { networkType })\n  return (\n    <BadgePopoverBase\n      addressField={\n        <ImageExists src={iconSrc}>\n          {({ exists, displayFallback }) => (\n            <AddressField\n              address={appAddress}\n              icon={<Icon src={exists ? iconSrc : iconFallbackSrc} />}\n            />\n          )}\n        </ImageExists>\n      }\n      link={etherscanUrl && <Link href={etherscanUrl}>See on Explorer</Link>}\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      visible={visible}\n    />\n  )\n})\n\nAppBadgePopover.propTypes = {\n  appAddress: PropTypes.string.isRequired,\n  iconFallbackSrc: PropTypes.string,\n  iconSrc: PropTypes.string,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node.isRequired,\n  visible: PropTypes.bool,\n}\n\nfunction Icon({ src, ...props }) {\n  return (\n    <div\n      css={`\n        width: 100%;\n        height: 100%;\n        background-size: contain;\n        background-position: 50% 50%;\n        background-repeat: no-repeat;\n        background-image: url(${src});\n      `}\n      {...props}\n    />\n  )\n}\n\nIcon.propTypes = {\n  src: PropTypes.string.isRequired,\n}\n\nexport default AppBadgePopover\n"],"names":["AppBadgePopover","React","memo","appAddress","iconFallbackSrc","iconSrc","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","exists","displayFallback","propTypes","PropTypes","string","isRequired","func","_element","BadgePopoverActionType","node","bool","Icon","src","props"],"mappings":";;;;;;;;;;;;IASMA,eAAe,gBAAGC,KAAK,CAACC,IAAN,CAAW,SAASF,eAAT,OAUhC;AAAA,MATDG,UASC,QATDA,UASC;AAAA,MARDC,eAQC,QARDA,eAQC;AAAA,MAPDC,OAOC,QAPDA,OAOC;AAAA,MANDC,WAMC,QANDA,WAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,MAAMC,YAAY,GAAGC,gBAAgB,CAAC,SAAD,EAAYV,UAAZ,EAAwB;AAAEG,IAAAA,WAAW,EAAXA;AAAF,GAAxB,CAArC;AACA,sBACE,oBAAC,gBAAD;AACE,IAAA,YAAY,eACV,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAED;AAAlB,OACG;AAAA,UAAGS,MAAH,SAAGA,MAAH;AAAA,gBAAWC;AAAX,0BACC,oBAAC,YAAD;AACE,QAAA,OAAO,EAAEZ,UADX;AAEE,QAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEW,MAAM,GAAGT,OAAH,GAAaD;AAA9B;AAFR,QADD;AAAA,KADH,CAFJ;AAWE,IAAA,IAAI,EAAEQ,YAAY,iBAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ,yBAXxB;AAYE,IAAA,OAAO,EAAEL,OAZX;AAaE,IAAA,MAAM,EAAEC,MAbV;AAcE,IAAA,aAAa,EAAEC,aAdjB;AAeE,IAAA,KAAK,EAAEC,KAfT;AAgBE,IAAA,OAAO,EAAEC;AAhBX,IADF;AAoBD,CAhCuB;AAkCxBX,eAAe,CAACgB,SAAhB,GAA4B;AAC1Bb,EAAAA,UAAU,EAAEc,iBAAS,CAACC,MAAV,CAAiBC,UADH;AAE1Bf,EAAAA,eAAe,EAAEa,iBAAS,CAACC,MAFD;AAG1Bb,EAAAA,OAAO,EAAEY,iBAAS,CAACC,MAHO;AAI1BZ,EAAAA,WAAW,EAAEW,iBAAS,CAACC,MAJG;AAK1BX,EAAAA,OAAO,EAAEU,iBAAS,CAACG,IALO;AAM1BZ,EAAAA,MAAM,EAAES,iBAAS,CAACI,QANQ;AAO1BZ,EAAAA,aAAa,EAAEa,sBAPW;AAQ1BZ,EAAAA,KAAK,EAAEO,iBAAS,CAACM,IAAV,CAAeJ,UARI;AAS1BR,EAAAA,OAAO,EAAEM,iBAAS,CAACO;AATO,CAA5B;;;;;;;;;AAYA,SAASC,IAAT,QAAiC;AAAA,MAAjBC,GAAiB,SAAjBA,GAAiB;AAAA,MAATC,KAAS;;AAC/B,sBACE,+CASMA,KATN;AAAA,UAO4BD;AAP5B,KADF;AAaD;;AAEDD,IAAI,CAACT,SAAL,GAAiB;AACfU,EAAAA,GAAG,EAAET,iBAAS,CAACC,MAAV,CAAiBC;AADP,CAAjB;;;;"}